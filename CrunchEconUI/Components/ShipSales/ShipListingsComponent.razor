@using CrunchEconModels.Models
@using CrunchEconUI.Models
@using CrunchEconUI.Services
@using Blazorise
@using Radzen

@inject IJSRuntime JsRuntime


<div class="container-fluid">


    <DataGrid TItem="ShipListing"
              Data="@Items"
              EditMode="Blazorise.DataGrid.DataGridEditMode.Popup"
              SelectionMode="Blazorise.DataGrid.DataGridSelectionMode.Single"
              ShowPager="true"
              ShowPageSizes="true"
              Editable="true"
              Responsive="true"
              Sortable="true"
              Striped="true"
              PageSize="25"
              CommandMode="DataGridCommandMode.Commands"
              SubmitFormOnEnter="false"
              Filterable="true" PopupSize="Blazorise.ModalSize.ExtraLarge" @ref=@GridRef>
        <ChildContent>
            <DataGridColumn TItem="ShipListing" Field="ImagePath" Caption="Icon" Filterable="false" Editable="false">
                <DisplayTemplate>

                    <RadzenImage Path="@context.ImagePath" Style="max-width: 300px; max-height: 300px;" />
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="ShipListing" Field="ShipName" Caption="Ship Name" Editable="false" />
            <DataGridColumn TItem="ShipListing" Field="Description" Caption="Description" Editable="false" />

            <DataGridColumn TItem="ShipListing" Field="Price" Caption="Price to Buy" Filterable="false" Editable="false">   </DataGridColumn>
            @*       <DataGridColumn TItem="ItemListing" Field="OwnerId" Caption="Owner" Editable="false">   </DataGridColumn>*@
            <DataGridCommandColumn TItem="ShipListing" DeleteCommandAllowed="true" NewCommandAllowed="false">
                <CancelCommandTemplate>
                    @*                  <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="cancel" Click="@(args => context.Clicked.InvokeAsync())"></RadzenButton> *@
                </CancelCommandTemplate>
                <SaveCommandTemplate>
                </SaveCommandTemplate>
                <ClearFilterCommandTemplate>
                    <HasAccessComponent AccessLevel="0">
                        <RadzenButton Icon="add" ButtonStyle="ButtonStyle.Success" Text="Create Listing" Click="@CreateListing" />
                    </HasAccessComponent>
                    <RadzenDropDown TValue="string" @bind-Value=@Bound Data=@Sorting Change="@Changed" Style="width: 100%; max-width: 400px;" />

                </ClearFilterCommandTemplate>
                <DeleteCommandTemplate>

                </DeleteCommandTemplate>
                <EditCommandTemplate>
                    <HasAccessComponent AccessLevel="0">
                        <RadzenStack>
                            <BuyShipComponent ListedItem="@context.Item"></BuyShipComponent>
                            @if (context.Item.RequireReputation)
                            {
                                <RadzenStack>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H2">Rep Required: @context.Item.ReputationRequirement</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H2">@(string.Join("or", context.Item.FactionTag.Split(","))) </RadzenText>

                                </RadzenStack>
                            }
                        </RadzenStack>
                    </HasAccessComponent>
                </EditCommandTemplate>
            </DataGridCommandColumn>
        </ChildContent>
    </DataGrid>

</div>

