@using CrunchEconUI.Models
@using CrunchEconUI.Services
@using Blazorise
@inject IJSRuntime JsRuntime

<div class="container-fluid">
    <DataGrid TItem="ItemListing"
              Data="@Items"
              EditMode="Blazorise.DataGrid.DataGridEditMode.Popup"
              SelectionMode="Blazorise.DataGrid.DataGridSelectionMode.Single"
              ShowPager="true"
              ShowPageSizes="true"
              Editable="true"
              Responsive="true"
              Sortable="true"
              Striped="true"
              PageSize="50"
              CommandMode="DataGridCommandMode.Commands"
              SubmitFormOnEnter="false"
              Filterable="true" PopupSize="Blazorise.ModalSize.ExtraLarge">
        <ChildContent>

            <DataGridColumn TItem="ItemListing" Field="ItemIdImage" Caption="" Filterable="false" Editable="false">
                <DisplayTemplate>
                    <img src="https://w7.pngwing.com/pngs/327/920/png-transparent-space-engineers-medieval-engineers-engineering-outer-space-space-survival-simulator-3d-others-text-logo-engineering.png" style="max-width: 100px; max-height: 100px;"/>
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="ItemListing" Field="ItemId" Caption="Item" Editable="false">   </DataGridColumn>
            <DataGridColumn TItem="ItemListing" Field="BuyPricePerItem" Caption="Buy Price Per Item" Editable="false">   </DataGridColumn>
   
            <DataGridColumn TItem="ItemListing" Field="SellPricePerItem" Caption="Sell Price Per Item" Editable="false">   </DataGridColumn>
            <DataGridColumn TItem="ItemListing" Field="Amount" Caption="Amount" Editable="false">   </DataGridColumn>
            <DataGridColumn TItem="ItemListing" Field="MaxAmountToBuy" Caption="Maximum Stock to buy" Editable="false">   </DataGridColumn>
     @*       <DataGridColumn TItem="ItemListing" Field="OwnerId" Caption="Owner" Editable="false">   </DataGridColumn>*@
            <DataGridCommandColumn TItem="ItemListing" DeleteCommandAllowed="false">
                <CancelCommandTemplate>
                    <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="cancel" Click="@(args => context.Clicked.InvokeAsync())"></RadzenButton>
                </CancelCommandTemplate>
                <SaveCommandTemplate>
                </SaveCommandTemplate>
                <NewCommandTemplate>
                </NewCommandTemplate>
                <EditCommandTemplate>
                    <BuyAndSellComponent ListedItem="@context.Item"></BuyAndSellComponent>
                </EditCommandTemplate>
            </DataGridCommandColumn>
        </ChildContent>
    </DataGrid>

</div>

@code {
    [Inject] IListingsService listingService { get; set; }
    List<ItemListing> Items = new ();
    public DataGrid<ItemListing> GridRef { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Items = await listingService.GetListings();
    }
}
